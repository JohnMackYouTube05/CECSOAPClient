//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CECSOAPClient.RedemptionServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://semnox.com/", ConfigurationName="RedemptionServices.RedemptionServicesSoap")]
    public interface RedemptionServicesSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/GetPrizeMachineInfoDTOList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[] GetPrizeMachineInfoDTOList(CECSOAPClient.RedemptionServices.PrizeMachineFilterDTO prizeMachineFilterDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/GetPrizeMachineInfoDTOList", ReplyAction="*")]
        System.Threading.Tasks.Task<CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[]> GetPrizeMachineInfoDTOListAsync(CECSOAPClient.RedemptionServices.PrizeMachineFilterDTO prizeMachineFilterDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/TestGetPrizeMachineInfoDTOListHelper", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[] TestGetPrizeMachineInfoDTOListHelper(System.DateTime startOfPeriod, System.DateTime endOfPeriod, string dispenseCategory, string machineRef1, string machineRef2, string machineRef3, string machineRef4, string machineRef5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/TestGetPrizeMachineInfoDTOListHelper", ReplyAction="*")]
        System.Threading.Tasks.Task<CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[]> TestGetPrizeMachineInfoDTOListHelperAsync(System.DateTime startOfPeriod, System.DateTime endOfPeriod, string dispenseCategory, string machineRef1, string machineRef2, string machineRef3, string machineRef4, string machineRef5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/RedeemTickets", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RedeemTickets(CECSOAPClient.RedemptionServices.RedemptionParams redemptionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/RedeemTickets", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RedeemTicketsAsync(CECSOAPClient.RedemptionServices.RedemptionParams redemptionParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/RedeemTicketsTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RedeemTicketsTest(string cardNumber, int ticketCount, int productId, string PosMachine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://semnox.com/RedeemTicketsTest", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RedeemTicketsTestAsync(string cardNumber, int ticketCount, int productId, string PosMachine);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://semnox.com/")]
    public partial class PrizeMachineFilterDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime startOfPeriodField;
        
        private System.DateTime endOfPeriodField;
        
        private string dispenseCategoryField;
        
        private string[] machineListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime StartOfPeriod {
            get {
                return this.startOfPeriodField;
            }
            set {
                this.startOfPeriodField = value;
                this.RaisePropertyChanged("StartOfPeriod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime EndOfPeriod {
            get {
                return this.endOfPeriodField;
            }
            set {
                this.endOfPeriodField = value;
                this.RaisePropertyChanged("EndOfPeriod");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DispenseCategory {
            get {
                return this.dispenseCategoryField;
            }
            set {
                this.dispenseCategoryField = value;
                this.RaisePropertyChanged("DispenseCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] MachineList {
            get {
                return this.machineListField;
            }
            set {
                this.machineListField = value;
                this.RaisePropertyChanged("MachineList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://semnox.com/")]
    public partial class RedemptionParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int productIdField;
        
        private string cardNumberField;
        
        private string posMachineField;
        
        private System.Nullable<int> siteIdField;
        
        private int ticketCountField;
        
        public RedemptionParams() {
            this.cardNumberField = "";
            this.posMachineField = "";
            this.ticketCountField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
                this.RaisePropertyChanged("ProductId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
                this.RaisePropertyChanged("CardNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute("")]
        public string PosMachine {
            get {
                return this.posMachineField;
            }
            set {
                this.posMachineField = value;
                this.RaisePropertyChanged("PosMachine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<int> SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
                this.RaisePropertyChanged("SiteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int TicketCount {
            get {
                return this.ticketCountField;
            }
            set {
                this.ticketCountField = value;
                this.RaisePropertyChanged("TicketCount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://semnox.com/")]
    public partial class PrizeMachineInfoDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dispenseCategoryField;
        
        private string machineRefField;
        
        private decimal stockQuantityField;
        
        private decimal stockValueField;
        
        private int machineCountField;
        
        private int ticketCountField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DispenseCategory {
            get {
                return this.dispenseCategoryField;
            }
            set {
                this.dispenseCategoryField = value;
                this.RaisePropertyChanged("DispenseCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MachineRef {
            get {
                return this.machineRefField;
            }
            set {
                this.machineRefField = value;
                this.RaisePropertyChanged("MachineRef");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal StockQuantity {
            get {
                return this.stockQuantityField;
            }
            set {
                this.stockQuantityField = value;
                this.RaisePropertyChanged("StockQuantity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal StockValue {
            get {
                return this.stockValueField;
            }
            set {
                this.stockValueField = value;
                this.RaisePropertyChanged("StockValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int MachineCount {
            get {
                return this.machineCountField;
            }
            set {
                this.machineCountField = value;
                this.RaisePropertyChanged("MachineCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int TicketCount {
            get {
                return this.ticketCountField;
            }
            set {
                this.ticketCountField = value;
                this.RaisePropertyChanged("TicketCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RedemptionServicesSoapChannel : CECSOAPClient.RedemptionServices.RedemptionServicesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RedemptionServicesSoapClient : System.ServiceModel.ClientBase<CECSOAPClient.RedemptionServices.RedemptionServicesSoap>, CECSOAPClient.RedemptionServices.RedemptionServicesSoap {
        
        public RedemptionServicesSoapClient() {
        }
        
        public RedemptionServicesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RedemptionServicesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedemptionServicesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedemptionServicesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[] GetPrizeMachineInfoDTOList(CECSOAPClient.RedemptionServices.PrizeMachineFilterDTO prizeMachineFilterDTO) {
            return base.Channel.GetPrizeMachineInfoDTOList(prizeMachineFilterDTO);
        }
        
        public System.Threading.Tasks.Task<CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[]> GetPrizeMachineInfoDTOListAsync(CECSOAPClient.RedemptionServices.PrizeMachineFilterDTO prizeMachineFilterDTO) {
            return base.Channel.GetPrizeMachineInfoDTOListAsync(prizeMachineFilterDTO);
        }
        
        public CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[] TestGetPrizeMachineInfoDTOListHelper(System.DateTime startOfPeriod, System.DateTime endOfPeriod, string dispenseCategory, string machineRef1, string machineRef2, string machineRef3, string machineRef4, string machineRef5) {
            return base.Channel.TestGetPrizeMachineInfoDTOListHelper(startOfPeriod, endOfPeriod, dispenseCategory, machineRef1, machineRef2, machineRef3, machineRef4, machineRef5);
        }
        
        public System.Threading.Tasks.Task<CECSOAPClient.RedemptionServices.PrizeMachineInfoDTO[]> TestGetPrizeMachineInfoDTOListHelperAsync(System.DateTime startOfPeriod, System.DateTime endOfPeriod, string dispenseCategory, string machineRef1, string machineRef2, string machineRef3, string machineRef4, string machineRef5) {
            return base.Channel.TestGetPrizeMachineInfoDTOListHelperAsync(startOfPeriod, endOfPeriod, dispenseCategory, machineRef1, machineRef2, machineRef3, machineRef4, machineRef5);
        }
        
        public bool RedeemTickets(CECSOAPClient.RedemptionServices.RedemptionParams redemptionParams) {
            return base.Channel.RedeemTickets(redemptionParams);
        }
        
        public System.Threading.Tasks.Task<bool> RedeemTicketsAsync(CECSOAPClient.RedemptionServices.RedemptionParams redemptionParams) {
            return base.Channel.RedeemTicketsAsync(redemptionParams);
        }
        
        public bool RedeemTicketsTest(string cardNumber, int ticketCount, int productId, string PosMachine) {
            return base.Channel.RedeemTicketsTest(cardNumber, ticketCount, productId, PosMachine);
        }
        
        public System.Threading.Tasks.Task<bool> RedeemTicketsTestAsync(string cardNumber, int ticketCount, int productId, string PosMachine) {
            return base.Channel.RedeemTicketsTestAsync(cardNumber, ticketCount, productId, PosMachine);
        }
    }
}
